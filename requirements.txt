# 1. Verificar e instalar o Python

# No Windows:
# Certifique-se de que o Python está instalado. Se não estiver, baixe e instale a versão mais recente em https://www.python.org/downloads/.
# Durante a instalação, lembre-se de marcar a opção "Adicionar Python ao PATH".

# No macOS:
# Verifique se o Python já está instalado digitando `python3 --version` no terminal.
# Se não estiver instalado, você pode instalar o Homebrew e depois o Python:
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
brew install python

# No Linux:
# Python geralmente está pré-instalado em muitas distribuições Linux.
# Se não estiver instalado, você pode instalá-lo usando o gerenciador de pacotes da sua distribuição.
# No Ubuntu ou Debian:
sudo apt update
sudo apt install python3

# 2. Criar um ambiente virtual

# O comando para criar um ambiente virtual é o mesmo para todos os sistemas operacionais.
# Vamos criar um ambiente virtual chamado "env" no diretório atual.
python3 -m venv env

# 3. Ativar o ambiente virtual

# No Windows:
.\env\Scripts\activate

# No macOS e Linux:
source env/bin/activate

# 4. Instalar as bibliotecas Python desejadas

# Para garantir a consistência e reprodutibilidade do projeto, é recomendável listar todas as dependências em um arquivo "requirements.txt".
# Você pode fazer isso manualmente ou usar o comando pip freeze para listar todas as bibliotecas instaladas no ambiente virtual.

# Aqui estão 50 bibliotecas Python comumente usadas (adapte conforme necessário):
echo "numpy==1.21.3" > requirements.txt
echo "requests==2.26.0" >> requirements.txt
echo "pandas==1.3.3" >> requirements.txt
echo "flask==2.0.1" >> requirements.txt
echo "scikit-learn==0.24.2" >> requirements.txt

echo "PyQt5==5.15.4" >> requirements.tx

# 5. Instalar as dependências listadas no arquivo "requirements.txt"
pip install -r requirements.txt

# 6. Gerar o arquivo requirements.txt (opcional)

# Se você não tiver um arquivo requirements.txt ou deseja atualizá-lo com as bibliotecas instaladas,
# você pode usar o comando pip freeze para listar todas as bibliotecas instaladas e salvá-las no arquivo "requirements.txt".
pip freeze > requirements.txt

# 7. Desativar o ambiente virtual

# Quando você terminar de trabalhar no projeto, você pode desativar o ambiente virtual.
deactivate



Para usar o pipreqs, é necessário instalá-lo primeiro, o que pode ser feito através do seguinte comando no terminal:


pip install pipreqs

Em seguida, basta navegar até o diretório raiz do projeto e executar o seguinte comando:


pipreqs .
